In this simulation, we assume only one sliding window is readable.

To Run the simulation, simply run "file".

- file.c      : contains the code of "file"
- command     : IO file of the program
- stuckDET.sh : Bash Shell script to monitor if the attacker falls into an "infinite loop"

The attacker performs the attack by taking advantage of a format string memory leak vulnerable and a stack overflow vulnerable.

Attacker first read out from the stack the stack canary, address of the shellcode, and an address belongs to libc.

Then, attacker constructs the payload, and overflows a "char buf[810]" buffer.

In the payload construction, it trys to find the "mprotect" function to make the shellcode executable. ( Since DEP is Enabled. )

In this attack, the attacking simply iterates through all the possible address in the libc.

To be noted, the memory leak happens in the stack area, which is not protected by the XnR. Thus we can bypass XnR.